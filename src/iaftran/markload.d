/*---------------------------------------------------------------------------*
 *  markload.d - LIBERO dialog data definitions for markload.c.              *
 *  Generated by LIBERO 2.32 on 16 May, 2002, 14:42.                         *
 *  Schema file used: lrschema.c.                                            *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
enum {
    terminate_event = -1,
    data_event = 0,
    end_event = 1,
    end_of_file_event = 2,
    end_of_tag_event = 3,
    end_tag_event = 4,
    error_event = 5,
    found_event = 6,
    invalid_tag_event = 7,
    last_tag_event = 8,
    load_buffer_event = 9,
    no_event = 10,
    normal_event = 11,
    not_found_event = 12,
    ok_event = 13,
    open_tag_event = 14,
    script_event = 15,
    script_data_event = 16,
    unknow_data_event = 17,
    unknow_tag_event = 18,
    yes_event = 19
};

enum {
    _LR_defaults_state = 6,
    _LR_STATE_after_init = 0,
    _LR_STATE_get_token = 1,
    _LR_STATE_go_to_end_of_tag = 2,
    _LR_STATE_go_to_end_of_end_tag = 3,
    _LR_STATE_script_end_tag = 4,
    _LR_STATE_process_unknow_tag = 5,
    _LR_STATE_defaults = 6
};


/*- Variables used by dialog interpreter ------------------------------------*/

typedef int event_t;                    /*  Type for dialog entity           */
typedef void (fsmfunct) (void);         /*  Address of FSM function          */

static event_t
    _LR_event,                          /*  Event for state transition       */
    _LR_state,                          /*  Current dialog state             */
    _LR_savest,                         /*  Saved dialog state               */
    _LR_index,                          /*  Index into vector table          */
    the_next_event,                     /*  Next event from module           */
    the_exception_event;                /*  Exception event from module      */

static dbyte
   *_LR_vecptr;                         /*  Pointer into vector table        */

static Bool
    exception_raised;                   /*  TRUE if exception raised         */

/*- Function prototypes -----------------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

local  raise_exception                  (event_t event);
MODULE initialise_the_program           (void);
MODULE get_external_event               (void);
MODULE open_markup_file                 (void);
MODULE initialise_tag_tree              (void);
MODULE get_content_token                (void);
MODULE signal_error                     (void);
MODULE terminate_the_program            (void);
MODULE stack_tag                        (void);
MODULE get_tag_value                    (void);
MODULE get_tag_attribute                (void);
MODULE goto_end_of_data                 (void);
MODULE create_new_data                  (void);
MODULE goto_end_of_file                 (void);
MODULE create_new_tag                   (void);
MODULE load_buffer                      (void);
MODULE close_markup_file                (void);
MODULE search_for_scripting_tag         (void);
MODULE go_to_end_of_tag                 (void);
MODULE unstack_tag                      (void);
MODULE return_before_tag                (void);
MODULE go_to_end_of_script_tag          (void);
MODULE check_if_need_end_tag            (void);
MODULE remove_crlf                      (void);
MODULE check_if_need_end_of_tag         (void);
MODULE go_to_end_of_script_data         (void);
MODULE restore_stack                    (void);
MODULE create_script_data               (void);
MODULE move_to_parent_tag               (void);
MODULE goto_script_end_tag              (void);

/*- Static areas ------------------------------------------------------------*/

static dbyte _LR_nextst [][20] =
{
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0 },
    { 1,0,1,0,3,0,0,0,0,1,0,0,0,0,2,0,0,1,0,0 },
    { 0,1,0,2,0,0,0,2,0,0,0,2,0,0,2,4,2,0,5,0 },
    { 0,1,0,3,0,0,0,0,0,0,0,3,0,0,3,3,0,0,3,0 },
    { 0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,0,1 },
    { 0,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0 },
    { 0,0,6,0,0,6,0,0,6,0,0,0,0,0,0,0,0,0,0,0 }
};

static dbyte _LR_action [][20] =
{
    { 0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0 },
    { 4,0,7,0,3,0,0,0,0,6,0,0,0,0,3,0,0,5,0,0 },
    { 0,13,0,12,0,0,0,10,0,0,0,9,0,0,3,11,14,0,8,0 },
    { 0,15,0,12,0,0,0,0,0,0,0,9,0,0,3,9,0,0,9,0 },
    { 0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,17,0,0,16 },
    { 0,0,0,0,0,0,18,0,0,0,0,0,19,0,0,0,0,0,0,0 },
    { 0,0,7,0,0,2,0,0,20,0,0,0,0,0,0,0,0,0,0,0 }
};

static dbyte _LR_vector [][6+1] =
{
    {0},
    {0,1,2,_LR_STOP},
    {3,4,_LR_STOP},
    {5,6,7,_LR_STOP},
    {8,9,2,_LR_STOP},
    {10,11,2,_LR_STOP},
    {12,2,_LR_STOP},
    {13,4,_LR_STOP},
    {14,_LR_STOP},
    {15,_LR_STOP},
    {16,17,_LR_STOP},
    {18,19,_LR_STOP},
    {16,_LR_STOP},
    {20,11,21,2,_LR_STOP},
    {16,11,22,23,24,18,_LR_STOP},
    {20,11,25,2,_LR_STOP},
    {26,11,2,_LR_STOP},
    {11,22,24,26,11,2,_LR_STOP},
    {7,_LR_STOP},
    {15,20,11,2,_LR_STOP},
    {11,13,4,_LR_STOP}
};

static fsmfunct *_LR_module [] =
{
    open_markup_file,
    initialise_tag_tree,
    get_content_token,
    signal_error,
    terminate_the_program,
    stack_tag,
    get_tag_value,
    get_tag_attribute,
    goto_end_of_data,
    create_new_data,
    goto_end_of_file,
    create_new_tag,
    load_buffer,
    close_markup_file,
    search_for_scripting_tag,
    go_to_end_of_tag,
    unstack_tag,
    return_before_tag,
    go_to_end_of_script_tag,
    check_if_need_end_tag,
    remove_crlf,
    check_if_need_end_of_tag,
    go_to_end_of_script_data,
    restore_stack,
    create_script_data,
    move_to_parent_tag,
    goto_script_end_tag
};

